#!/bin/bash
set -e
#### LAUNCH-EPISODE
# This script takes care of a number of post-production tasks required for
# releasing a new episode of our podcast, Lovey Dummies. It reads in three
# parameters from the terminal:
#    1. Episode number
#    2. Episode title
#    3. Episode subtitle (usually who we interviewed for the episode)
#
# The script also assumes there are two files in PWD:
#    1. episode-#.wav (master file from Audacity)
#    2. episode-#.txt (chapter labels exported from Audacity)
#
# With these pre-requisites, LAUNCH-EPISODE will encode an OPUS audio file
# (good quality for the website) and an M4A audio file for the iTunes RSS feed,
# both automatically tagged with the appropriate metadata and artwork. It then
# converts the Audacity chapter labels (using the CHAPPY script) into a WebVTT
# file for chapter support on the website, as well as a specially formatted
# CHAPTERS file for embedding in the M4A audio file. It then offers to upload
# the files to AWS S3.
#
# Finally, it copies the WebVTT file into the appropriate directory for our
# website, writes up the Jekyll front matter for the episode, and opens it in
# VIM for editing. Committing and pushing from git is left to the user ;)

EPNUM=$1
EPTITLE=$2
INTERVIEWEES=$3

ARTIST="Dave & Pearl"
ALBUM="Lovey Dummies"
YEAR=$(date +"%Y")
COPYRIGHT="CC-BY 4.0 $YEAR David Berg & Perlan Alatiit"
URL="http://loveydummies.com/about"
COVER="/path/to/cover.png"

LDDIR="/path/to/lovey.dummies/"

DATE=$(date +"%F %T %z")

EP="episode-$EPNUM"
MASTERFILE=$EP.wav
LABELFILE=$EP.txt
JPEGFILE=$EP.jpg

# Run tests to make sure we have everything
if [ ! -f "$MASTERFILE" ];then
    echo "FATAL: $MASTERFILE not found."
    exit 1
fi
if [ ! -f "$LABELFILE" ]; then
    echo "FATAL: $LABELFILE not found."
    exit 1
fi
if [ ! -f "$JPEGFILE" ]; then
    echo "FATAL: $JPEGFILE not found."
    exit 1
fi
if [ ! -f "$COVER" ]; then
    echo "FATAL: $COVER not found."
    exit 1
fi

OPUSFILE=$EP.opus
M4AFILE=$EP.m4a
CHAPTERSFILE=$EP.chapters.txt
VTTFILE=$EP.vtt

POSTNAME=$(echo "$(date +"%F")-$(echo "$EPTITLE" \
        | sed -e 's/ /-/g' -e "s/[\!\@\#\\\$\%\^\&\*\(\)\',?]//g" \
        | tr '[:upper:]' '[:lower:]')")
POSTFILE=$POSTNAME.md
POSTJPEG=$POSTNAME.jpg

echo "CREATING AUDIO FILES"
echo "Converting to opus..."
opusenc --bitrate 64 \
        --cvbr \
        --artist "$ARTIST" \
        --album "$ALBUM" \
        --title "$EPTITLE" \
        --comment TRACKNUMBER="$EPNUM" \
        --date "$YEAR" \
        --comment COPYRIGHT="$COPYRIGHT" \
        --comment CONTACT="$URL" \
        --picture "$COVER" \
        "$MASTERFILE" "$OPUSFILE" && sync

echo "Converting to aac..."
fdkaac -p 5 -b 64k \
       -o "$M4AFILE" \
       -S "$MASTERFILE" && sync

echo "Adding chapters..."
chappy "$LABELFILE"
mp4chaps --import --chapter-qt "$M4AFILE" && sync

echo "Writing tags..."
mp4tags -a "$ARTIST" \
        -A "$ALBUM" \
        -s "$EPTITLE" \
        -t "$EPNUM" \
        -y "$YEAR" \
        -C "$COPYRIGHT" \
        -c "$URL" \
        -B 1 \
        "$M4AFILE" && sync
mp4art --add "$COVER" "$M4AFILE" && sync
rm "$CHAPTERSFILE"

echo "Preparing social media image..."
mv "$JPEGFILE" "$POSTJPEG"

echo "Ready to upload? Check your files before you say yes!"
select yn in "Yes" "No"; do
    case $yn in
        Yes )
            aws s3 cp "$M4AFILE" s3://lovey-dummies/ --acl public-read;
            aws s3 cp "$OPUSFILE" s3://lovey-dummies/ --acl public-read;
            aws s3 cp "$VTTFILE" s3://lovey-dummies/ --acl public-read;
            aws s3 cp "$POSTJPEG" s3://lovey-dummies/social/ --acl public-read;
            break;;
        No ) break;;
    esac
done

clear
echo "Copying VTT file..."
cp "$VTTFILE" $LDDIR/chapters/"$VTTFILE"

echo "Preparing entry for website..."
LENGTH=$(stat -c%s "$M4AFILE")
TOTALSEC=$(printf %.0f "$(mp4info "$M4AFILE" \
        | grep audio \
        | cut -f3 \
        | cut -d ',' -f2 \
        | cut -d ' ' -f2)")
MIN=$(printf %02d "$(bc <<< "$TOTALSEC / 60")")
SEC=$(printf %02d "$(bc <<< "$TOTALSEC % 60")")
DURATION="$MIN:$SEC"

cd $LDDIR/_posts/episode && true > "$POSTFILE"
{
  echo "---"
  echo "layout:    episode"
  echo "title:    \"$EPTITLE\""
  echo "subtitle:  $INTERVIEWEES"
  echo "date:      $DATE"
  echo "itunes:    $M4AFILE"
  echo "opus:      $OPUSFILE"
  echo "chapters:  $VTTFILE"
  echo "length:    $LENGTH"
  echo "duration: \"$DURATION\""
  echo -e "---\n\n"
} >> "$POSTFILE"

read -p "Hit [ENTER] to type in the show notes"
vim +13 "$POSTFILE"

clear
echo "Be sure to add, commit, and push the new show live!"
echo "All done!"

